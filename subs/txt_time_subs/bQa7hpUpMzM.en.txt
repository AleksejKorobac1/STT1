00:00:00 - The following is a conversation with Vladimir Vapnik, part two, the second time we spoke on the podcast.
00:00:07 He's the co inventor of support vector machines, support vector clustering, VC theory and many foundational ideas in statistical learning.
00:00:15 He was born in the Soviet Union, worked at the Institute of Control Sciences in Moscow, then in the U.S., worked at ATT&T,
00:00:23 NEC Labs, Facebook AI Research, and now is a professor at Columbia University. His work has been cited
00:00:29 over 200,000 times. The first time we spoke on the podcast was just over a year ago, one of the early episodes.
00:00:39 This time we spoke after a lecture he gave titled: "Complete Statistical Theory of Learning,"
00:00:44 as part of the MIT series of lectures on Deep Learning and AI that I organized. I'll release the video of the lecture in the next few days.
00:00:53 This podcast and the lecture are independent from each other so you don't need one to understand the other.
00:00:59 The lecture is quite technical and math heavy. So if you do watch both, I recommend listening
00:01:05 to this podcast first, since the podcast is probably a bit more accessible.
00:01:11 This is The Artificial Intelligence Podcast. If you enjoy it, subscribe on YouTube, give it five starts on Apple PodCast,
00:01:17 support it on Patreon, or simply connect with me on Twitter @LexFridman, spelled: F-R-I-D-M-A-N. As usual, I'll do one or two minutes of ads now,
00:01:27 and never any ads in the middle that can break the flow of the conversation.
00:01:31 I hope that works for you and doesn't hurt the listening experience. This show is presented by Cash App,
00:01:38 the number one finance app on the App Store. When you get it, use code: LexPodcast. Cash App lets you send money to friends
00:01:45 by BitCoin and invest in the stock market with as little as $1. Broker services are provided by Cash App Investing,
00:01:52 a subsidiary of Square, and member S.I.P.C.. Since Cash App allows you to send and receive money
00:01:58 digitally peer to peer, and security in all digital transaction is very important, let me mention
00:02:04 that PCI data security standard. PCI DSS Level One, that Cash App is complaint with. I'm a big fan of standards
00:02:12 for safety and security and PCI DSS is a good example of that. Where a bunch of competitors got together
00:02:21 and agreed that there needs to be a global standard around the security of transactions. Now we just need to do the same for autonomous vehicles
00:02:28 and A.I. systems in general. So again, if you get Cash App from the App Store or Google Play, and use
00:02:33 the code: LexPodcast, you get $10, and Cash App will also donate $10 to FIRST, one of my favorite
00:02:41 organizations that is helping to advance robotics and STEM education for young people around the world.
00:02:49 And now, here's my conversation with Vladimir Vapnik. You and I talked about Alan Turing yesterday,
00:02:58 a little bit. - Yes. - And that he, as the father of artificial intelligence
00:03:02 may have instilled in our field an ethic of engineering in that science. Seeking more to build intelligence
00:03:09 rather than to understand it. What do you think is the difference between these two paths of engineering intelligence and
00:03:15 the science of intelligence? - It's a completely different story. Engineering is imitation of human activity.
00:03:28 You have to make a device which behaves as a human behaves. You have all the functions of human.
00:03:39 It does not matter how you do it. But to understand what is intelligence about, is quite different problem.
00:03:48 So I think, I believe, that it's somehow related to predicated talk yesterday. Because,
00:04:00 look at Vladimir Propp's idea. He just found such a one here, predicates.
00:04:12 He called it units. Which can explain human behavior, at least in Russian tales.
00:04:22 You look at the Russian tales and derive from that. And then people realize that they're more violent in Russian tales.
00:04:29 It is in TV, in movie serials and so on and so on. - So you're talking about Vladimir Propp, who in 1928 published a book,
00:04:39 "Morphology of the Folk Tale." - Exactly. - Describing 31 predicates that
00:04:45 have this kind of sequential structure that a lot of the stories' narratives follow in Russian folklore and in other content.
00:04:55 We'll talk about it; I'd like to talk about predicates in a focused way, but let me, if you'll allow me,
00:05:00 to stay zoomed out on our friend Allen Touring. And you know, he inspired a generation with the imitation game. - Yes.
00:05:11 - Do you think, if we can linger on that a little bit longer do you think we can learn?
00:05:18 Do you think learning to imitate intelligence can get us closer to understanding intelligence?
00:05:26 Why do you think imitation is so far from understanding? - I think that it is different between you have different goals.
00:05:39 Your goal is to create something, something useful. And that is great, and you can see how much things was done
00:05:49 and I believe that it will be done even more. Self-driving cars and all sorts of this business.
00:05:56 It is great, and it was inspired by Turing's vision. But understanding is very difficult. It's more or less a philosophical category.
00:06:08 What means understandable? I believe in things which start from Plato. That there exists world of ideas.
00:06:19 I believe that intelligence, it is world of ideas. But it is world of pure ideas. And when you
00:06:29 combine that with reality things, it creates as in my case, in the variants, which is very specific.
00:06:38 And that I believe, the combination of ideas and a way to constructing the variant is intelligence, but
00:06:48 first of all a predicate. If you know predicate, and hope for this is not too much predicate exists.
00:07:01 For example, sort of unpredicted for human behavior is not a lot. - Vladimir Propp used
00:07:07 31 (sighs) you could even call 'em predicates, 31 predicates to describe stories, narratives. Do you think human behavior,
00:07:20 how much of human behavior, how much of our world, our universe, all the things that matter in our existence
00:07:27 can be summarized in predicates of the kind that Propp was working with? - I think that we have
00:07:35 a lot of forms of behavior. But I think the predicate is much less. Because even in these examples which I gave you yesterday,
00:07:45 you saw that predicate can be, one, predicate can construct many different invariants,
00:07:56 depending on your data. They're applying to different data and they give different invariants.
00:08:04 But pure ideas, maybe not so much. - Not so many. - I don't know about that.
00:08:11 But my guess, I hope, that's my challenge about digit recognition, how much you need.
00:08:19 - I think we'll talk about computer vision and 2-D images a little bit in your challenge. - [Vladimir] That's
00:08:24 exact about intelligence. - That's exactly about, no, that hopes to be exactly about the spirit of intelligence
00:08:35 in the simplest possible way. - Yeah, absolutely. You should start the simplest way,
00:08:40 otherwise you will not be able to do it. - There's an open question whether starting at the MNIST digit recognition
00:08:48 is a step towards intelligence or it's an entirely different thing. - I think that to build
00:08:54 records using say, 100, 200 times less examples, you need intelligence. - You need intelligence.
00:09:01 So let's, because you use this term, and it would be nice, I'd like to ask simple, maybe even dumb questions.
00:09:10 Let's start with a predicate. In terms of terms and how you think about it, what is a predicate?
00:09:17 - I don't know. (laughs) I have a feeling, formally they exist.
00:09:25 I believe that predicate for 2-D images. One of them is symmetry. - Hold on a second.
00:09:33 Sorry, sorry to interrupt and pull you back. At the simplest level, we're not being profound currently.
00:09:40 A predicate is a statement of something that is true. - [Vladimir] Yes. - Do you think of predicates as somehow probabilistic
00:09:51 in nature or is this binary? This is truly constraints of logical statements about the world.
00:09:59 - In my definition, the simplest predicate is function. Function and you can use this function
00:10:07 to make inner product, that is predicate. - What's the input and what's the output of the function? - Input is X, something
00:10:14 which is input in reality. Say, if you considered digit recognition, in pixel space. But it is function which in pixel space.
00:10:29 But it can be any function, pixel space. And you choose, and I believe that there are several functions,
00:10:41 which is important for understanding of images. One of them is symmetry, it's not so simple construction,
00:10:51 as I described is the derivative, it's all this stuff. But another I believe, I don't know how many,
00:10:58 is how well-structurized is picture. - Structurized? - Yeah. - What do you mean by structurized?
00:11:06 - It is formal definition, say, something heavy on the left corner, not so heavy in the middle and so on.
00:11:17 You describe in general, concept of what you assume. - Concepts, some kind of universal concepts.
00:11:25 - Yeah. But I don't know how to formalize this. - This is the thing, there's a million ways
00:11:32 we can talk about this, I'll keep bringing it up. We humans have such concepts,
00:11:39 when we look at digits. But it's hard to put them, just like you're saying now, it's hard to put them into words.
00:11:45 - You know, that is example. When critics in music, trying to describe music,
00:11:55 they use predicate. And not too many predicate but in different combination. But they have some special
00:12:02 words for describing music. And the same should be for images. But maybe there are critics who understand
00:12:16 essence of what this image is about. - Do you think there exists critics who can summarize the essence
00:12:25 of images, human beings? - [Vladimir] I hope that, yes. - Explicitly state them on paper?
00:12:37 The fundamental question I'm asking is do you (chuckles) do you think there exists a small set of predicates
00:12:44 that will summarize images? It feels to our mind like it does that the concept of what makes a two and a three
00:12:54 and a four-- - No, no, no. It's not only on this level.
00:13:01 It should not describe two, three, four. It describes some construction which allows you to create an invariants.
00:13:11 - And invariants, sorry to stick on this, but terminology. - Invariants, it is, it is projection
00:13:20 of your image. Say, I can say, looking at my image,
00:13:29 it is more or less symmetric and I can give you a variable of symmetry. Say, level of symmetry using this function
00:13:39 which I gave yesterday. Then you can describe that your image
00:13:50 has these characteristics exactly in the way how musical critics describe music. But this is invariant applied to specific data,
00:14:04 to specific music, to something. I strongly believe in this Plato idea,
00:14:12 that exists world of predicate and world of reality and predicate and reality are somehow connected
00:14:20 and you have to figure out that. - Let's talk about Plato a little bit. So you draw a line from Plato to Hegel
00:14:27 to Wigner to today. - Yes. - So Plato has forms. The theory of forms; there's a world of ideas
00:14:37 and a world of things, as you talk about. And there's a connection, and presumably the world of ideas is very small,
00:14:42 and the world of things is arbitrarily big, but they're all, what Plato calls them like,
00:14:51 it's a shadow, the real world is a shadow from the world of form. - Yeah and you have projection - Projection.
00:14:56 - Of a world of idea. - Yeah, very poetic. - And in reality you can, realize this projection
00:15:02 using these invariants because it is a projection for only specific examples which create specific
00:15:11 features of specific objects. - So the essence of intelligence is, while only being able to observe the world of things,
00:15:24 try to come up with a world of ideas. - Exactly, like in this music story. Intelligent musical critics knows this world
00:15:33 and have a feeling about them. - I feel like that's a contradiction; intelligent music critics.
00:15:39 I think music is to be... enjoyed in all its forms. The notion of critic, like a food critic.
00:15:50 - [Vladimir] No, I don't want attach emotion. - That's an interesting question. Does emotion, there's certain elements
00:15:56 of the human psychology, of the human experience which seem to almost contradict intelligence and reason.
00:16:05 Like emotion, like fear. Like love, all of those things. Are those not connected in any way to the space of ideas?
00:16:17 - This I don't know. I just want to be concentrating on very simple story.
00:16:26 On digit recognition. - So you don't think you have to love and fear death in order to recognize digits?
00:16:32 - I don't know because it's so complicated. It involves a lot of stuff which I never considered.
00:16:41 But I know about digit recognition. And I know that for digit recognition to get the records from small numbers of observations,
00:16:57 you need predicate but not special predicate for this problem.
00:17:03 But universal predicate which understand world of images. - Of visual information. - Visual, yeah.
00:17:11 But on the first step, they understand say, a world of 100 digits or characters or something simple.
00:17:21 - [Lex] So like you said, symmetry is an interesting one. - No, that's what I think one of the predicate
00:17:26 is related to symmetry, the level of symmetry. - Okay, degree of symmetry. - Yeah.
00:17:32 - So you think symmetry at the bottom is a universal notion and there's, there's degrees of a single kind of symmetry?
00:17:41 Or is there many kinds of symmetries? - Many kinds of symmetries. There is a symmetry/anti-symmetry say, letter S.
00:17:52 So it has vertical anti-symmetry. It could be diagonal symmetry, vertical symmetry. - So when you cut
00:18:02 vertically the letter S-- - Yeah, and then the upper part and lower part are in different directions.
00:18:16 - Inverted along the Y-axis. But that's just like, one example of symmetry right? Isn't there like--
00:18:21 - Right, but there is a degree of symmetry. If you play all this lineated stuff
00:18:33 to do tangent distance, whatever I described, you can have a degree of symmetry.
00:18:40 And that is what is describing reason of image. It is the same as you will describe this image
00:18:54 saying about digit S has anti-symmetry, digit three is symmetric more/less.
00:19:01 Look for symmetry. - Do you think such concepts like symmetry predicates, like symmetry, is it a
00:19:08 hierarchical set of concepts? Or are these independent, distinct predicates
00:19:20 that we want to discover a subset of? - There is a degree of symmetry. And this idea of symmetry made
00:19:32 very general, like degree of symmetry, the degree of symmetry can be zero, no symmetry at all. Or degree of symmetry of let's say,
00:19:43 more or less symmetrical. But you have one of these descriptions, and symmetry can be different.
00:19:52 As I told, horizontal, vertical, diagonal. Anti-symmetry also is a concept of symmetry. - What about shape in general?
00:20:03 I mean, symmetry is a fascinating notion, but it-- - No, no, I'm talking about digits, I would like to concentrate
00:20:10 on all I would like to know predicate for digit recognition. - Yes, but symmetry is not enough for digit recognition,
00:20:18 right? - It is not necessarily for digit recognition; it helps to create invariant,
00:20:28 which you can use when you will have examples for digit recognition. You have regular problem of digit recognition.
00:20:38 You have examples of the first class and second class. Plus you know that there exists this concept of symmetry.
00:20:45 And you apply when you're looking for decision rule, you will apply
00:20:53 concept of symmetry, of this level of symmetry which you estimate from. Everything is,
00:21:04 comes from weak convergence. - What is convergence? What is weak convergence?
00:21:09 What is strong convergence? I'm sorry I'm gonna do this to you. What are we converging from and to?
00:21:16 - You're converging, you would like to have a function. The function which say, indicate a function which indicate
00:21:26 your digit five, for example. - A classification/task-- - Let's talk only about
00:21:31 classification task. - So classification means you will say whether this is a five or not,
00:21:38 or say which of the 10 digits it is. - Right, right, I would like to have these functions.
00:21:46 Then, I have some examples. I can consider property of these examples.
00:22:01 Say, symmetry, and I can measure level of symmetry for every digit. And then I can take average
00:22:14 from my training data. And I will consider only functions of conditional probability, which I'm looking
00:22:24 for in my decision level. Which applying to
00:22:35 the digits will give me the same average as I observed on training data. So actually this is different level
00:22:45 of description of what you want. You want, not just, you show not one digit.
00:22:54 You show this predicate, show general property of all digits which you have in mind. If you have in mind digit three,
00:23:06 it gives you property of digit three and you select as admissible set of functions, only function which keeps this property.
00:23:16 You will not consider the other functions. So you're immediately looking for smaller subset of functions.
00:23:24 - That's what you mean by an admissible function. - And admissible function. Exactly.
00:23:28 - Which is still a pretty large, for the number three, that's a large-- - It's large but,
00:23:33 if you have one predicate. But according to, there is a strong and weak convergence.
00:23:42 Strong convergence if convergence in function. You're looking for the function, on one function,
00:23:49 and you're looking on another function. And square difference from them should be small.
00:23:59 If you take difference at any points, make a square, make an integral, and it should be small. That is convergence in function.
00:24:08 Suppose you had some function, any function. So I would say, I say that some function converged to this function.
00:24:17 If integral from square difference between them is small-- - That's the definition of strong convergence.
00:24:24 - That's the definition of-- - Two functions, the integral of the difference is small. - Yeah, it is convergence
00:24:29 in functions. - Yeah. - But you have different convergence in functions.
00:24:35 You take any function, you take some function Fe and take inner product this function, this F function.
00:24:46 F zero function which you want to find, and that gives you some value. So you say that a set of functions
00:24:58 converge in inner product to this function if this value of inner product converge to value F zero. That is for one Fe.
00:25:12 But three converges requires that it converges for any function of field of space. If it converge for any
00:25:20 function of field of space, then you will say that this is a weak convergence. You can think that when you take integral,
00:25:32 that is property, integral property of function. For example, if you will take sine or cosine,
00:25:39 it is coefficient of say, free expansion. If it converged for all coefficients or free expansion,
00:25:52 so under some condition it converged to function you're looking for. But weak convergence means any property.
00:26:02 Not convergence, not point-wise. But integral property of function. So weak convergence means integral property of functions.
00:26:13 When I'm talking about predicate, I would like to formulate which integral properties
00:26:23 I would like to have for convergence. And if I will take one predicate, predicate its function which I measure property.
00:26:37 If I will use one predicate and say, I will consider only function which give me the same value as this
00:26:44 predicate, I select a set of functions from functions which is admissible, in the sense that
00:26:55 function which I'm looking for in this set of functions. Because I'm checking in training data,
00:27:06 it gives the same. - [Lex] Yeah, so it always has to be connected to the training data in terms of--
00:27:12 - Yeah, but property, you can know independent of training data. And this guy, Propp,
00:27:21 says that there is formal property. 31 property and if you-- - A fairy tale, the Russian fairy tale.
00:27:25 - Right. But the Russian fairy tale is not so interesting. It's more interesting
00:27:30 that people applied this to movies, to theater, to different things and the same works.
00:27:40 They're universal. - So I would argue that there's a little bit of a difference between
00:27:47 the kinds of things that would apply to, which are essentially stories and digit recognition. - [Vladimir] It is the same story.
00:27:55 - You're saying digits, there's a story within the digit? - Yeah. (laughing)
00:28:01 So but my point is, well, I hope that it's possible to beat a record. Using not 60,000
00:28:11 but say, 100 times less. Because instead you will give predicates. And you will select your decision not
00:28:21 from right set of functions. But from set of function which gives this predicate. But predicate is not related
00:28:28 just to digit recognition. - Right, so-- - Like in Plato's case. - (laughs) Do you think it's possible
00:28:38 to automatically discover the predicates? So, you basically said that the essence of intelligence
00:28:46 is the discovery of good predicates. - [Vladimir] Yeah. - Now the natural question is,
00:28:55 you know, that's what Einstein was good at doing in physics. Can we make machines do these kinds of discovery of good predicates?
00:29:04 Or is this ultimately a human endeavor? - That I don't know. I don't think that much it can do.
00:29:11 Because, according to theory about weak convergence, any function from Hilbert
00:29:18 Space can be predicate. So you have infinite number of predicate in upper. And before you don't know which
00:29:27 predicate is good in which. But whatever Propp showed, and why people call it breakthrough,
00:29:39 that there is not too many predicate which cover most of situation that happen in the world. - So there's a sea of predicates.
00:29:54 Only a small amount are useful for the kinds of things that happen in the world? - I think that,
00:30:02 I would say only a small part of predicates very useful. Useful, all of them. - Only a very few
00:30:11 are what we should, let's call them good predicates. - Very good predicates. - Very good predicates.
00:30:19 Can we linger on it, what's your intuition? Why is it
00:30:24 hard for a machine to discover good predicates? - Even in my talk described how to do a predicate.
00:30:30 How to find new predicates, I'm not sure that it is very good predicate. - [Lex] What did you propose in your talk?
00:30:37 - In my talk I gave example for diabetes. - Diabetes, yeah. - When we achieve some percent so then we're looking from area,
00:30:50 where some sort of predicate which I formulated, does not... keep
00:31:01 invariant. So if it doesn't keep, I retrain my data. I select only functions which keep this invariant.
00:31:10 In the way I did it, I improved my performance. I came looking for this predicate.
00:31:16 I know technically how to do that. You can of course do it using a machine, but I'm not sure
00:31:27 that we will construct the smartest predicate. - Well this is the, allow me to linger on it.
00:31:34 Because that's the essence, that's the challenge. That is artificial, that's the human-level intelligence
00:31:40 that we seek, is the discovery of these good predicates. You've talked about deep learning as a way to,
00:31:47 the predicates they use and the functions are mediocre. Or you can find better ones. - Let's talk about deep learning.
00:31:57 - Sure, let's do it. - I know only Jans LaComb, convolutional network, and what else? And it's very simple convergence.
00:32:07 - [Lex] There's not much else to know. - To fix it left and right. - Yes. - I can do it like that
00:32:10 with one predicate. - [Lex] Convolution is a single predicate. - It's single,
00:32:19 it's single predicate. - Yes, but-- - You know exactly, you take the derivative
00:32:25 for translational, and predicate should be kept. - So that's a single predicate, but humans discovered
00:32:33 that one or at least-- - Not that that is the least not too many predicates. And that is big story because Jan did it 25 years ago,
00:32:43 and nothing so clear was uttered to deep network. And then I don't understand
00:32:54 why we should talk about deep network instead of talking about piece-wise linear functions which keeps this predicate.
00:33:03 - You know, a counter argument is, that maybe the amount of predicates necessary to solve general intelligence,
00:33:11 say in the space of images, doing efficient recognition of handwritten digits is very small.
00:33:23 So we shouldn't be so obsessed about finding, we'll find other good predicates like convolution, for example.
00:33:30 There has been other advancements like, if you look at the work with attention, there's attentional mechanisms,
00:33:39 especially used in natural language focusing the network's ability to, to learn at which part of the input to look at.
00:33:47 The thing is, there's other things besides predicates that are important for the actual engineering mechanism
00:33:55 of showing how much you can really do, given such these predicates. I mean, that's essentially the work of deep learning
00:34:04 is constructing architectures that are able to be given the training data to be able to converge towards
00:34:16 a function that can approximate, that can generalize well. It's an engineering problem. - Yeah, I understand.
00:34:26 But let's talk not on an emotional level, but on a mathematical level. You have set of piece-wise
00:34:31 linear functions, it is all possible neural networks. It's just piece-wise linear functions.
00:34:44 It's many, many pieces. - Large, large number of piece-wise linear function. - Exactly.
00:34:48 - Very large. - Very large. - [Lex] Almost, feels like too large. - It's still simpler than say, convolution,
00:34:55 which is reproducing Hilbert's Space and we have a Hilbert's set of functions. - What's Hilbert Space?
00:35:03 - It's space with infinite number of coordinates. A function for expansion, something like that.
00:35:11 So it's much richer. And when I'm talking about closed-form solution, I'm talking about this set of functions.
00:35:20 Not piece-wise linear set, which is particular case of (chuckles) it is small part of it. - So neural networks is a small part
00:35:32 of the space you're, of functions you're talking about? - Small set of functions. - Yeah.
00:35:39 - Let me take it that. But it is fine, it is fine. I don't want to discuss the small or big we take and what.
00:35:47 So you have some set of functions. So now when you're trying to create architecture, you would like to create
00:35:55 admissible set of functions, which all your tricks, to use not all functions, but some subset of this set of functions.
00:36:07 Say when you're introducing convolutional network. It is a way to make this subset useful for you.
00:36:16 But from my point of view, convolutional, it is something, you want to keep some invariance. Say, translation invariance.
00:36:27 But now if you understand this, and you cannot explain on the level of ideas what neural network does,
00:36:41 you should agree that it is much better to have a set of functions. As I say, this set of
00:36:46 functions should be admissible, it must keep this invariant, this invariant, and that invariant.
00:36:55 You know that as soon as you incorporate new invariants, set of functions becomes smaller and smaller and smaller.
00:37:02 - [Lex] But all the invariants are specified by you the human. - Yeah, but what I am hope,
00:37:09 that there is a standard predicate like, Propp showed. That's what I want to find for digit recognition.
00:37:19 If we start, it is completely new area of what is intelligence about on the level, starting from Plato's idea.
00:37:28 What is the world of ideas? And I believe there is not too many. But you know, it is amusing that mathematicians
00:37:39 are doing something with neural network in general function. But people from literature, from art,
00:37:47 they use this all the time. - That's right. - Invariants. Say, it is great how
00:37:52 people describe music. We should learn from that. Something on this level.
00:38:02 So why, Vladimir Propp who was just theoretical. Who studied theoretical literature, he found that.
00:38:13 - You know what, let me throw that right back at you. Because there's a little bit of a, that's less mathematical and more emotional,
00:38:20 philosophical Vladimir Propp. I mean, he wasn't doing math. - No. - And you just said another
00:38:26 emotional statement, which is you believe that this Plato world of ideas is small.
00:38:35 - I hope. - I hope. Do (chuckles), do you, what's your intuition, though, if we can linger on it?
00:38:44 That bothers me. - You know, because not just small or big.
00:38:48 I know exactly. That when I'm introducing some predicate, I decrease set of functions.
00:38:59 But my goal to decrease set of functions much. - By as much as possible. - By as much as possible.
00:39:07 Good predicate which does this, then I should choose next predicate which does this, which decreases set as much as possible.
00:39:17 So, set of good predicates, it is such that the decrease, amount of admissible functions--
00:39:27 - So if each good predicate significantly reduces the set of admissible functions that there naturally should not be that many predicates.
00:39:35 - No, but, if you reduce very well the VC dimension of the function of admissible set of
00:39:44 functions, it's small. And you need not too much training data to do well. - [Lex] And VC dimension, by the way,
00:39:55 is some measure of capacity of this set of functions. - Right, roughly speaking, how many function in this set.
00:40:02 So you're decreasing, decreasing, and it makes it easier for you to find the function you're looking for.
00:40:10 But the most important part, to create a good admissible set of functions. And it probably is that
00:40:15 there are many ways but, a good predicate is such that it can do that. For this duck,
00:40:28 you should know a little bit about duck. - What are the three fundamental laws of ducks? - Looks like a duck, swims like a duck,
00:40:37 and quacks like a duck. - And quacks. You should know something about ducks to be able to-- - Not necessarily.
00:40:42 Looks like say, horse. It's also good. - [Lex] So it's not (chuckles),
00:40:47 it generalize from ducks. - Yes, and talk like it, and make sound like horse or something. And run like horse and moves like horse.
00:40:57 It is general, it is general predicate that this applies to duck. But for duck you can say, play chess like duck.
00:41:09 - [Lex] You cannot say, play chess like a duck. - Why not? - So you're saying you can
00:41:14 but that that would not be a good-- - [Vladimir] No, you will not reduce that function. - Yeah, you would not
00:41:18 reduce the set of functions. - So you can, the story is formal story and it's a magical story is that you can use
00:41:28 any function you want as a predicate. But some of them are good, some of them are not. Because some of them
00:41:33 reduce a lot of functions. The admissible set, some of them (mumbles) - So the question is, and I'll probably keep asking
00:41:42 this question, but how do we find such predicates? What's your intuition?
00:41:47 Handwritten recognition, how do we find the answer to your challenge? - Yeah, I understand it like that.
00:41:55 I understand what. - What defined? - What that means, a new predicate.
00:42:00 - Yeah. - Like, guy who understands music can say these words he describes
00:42:07 when he listens to music. He understands music, he'll use not too many different. Or you can do it like Propp.
00:42:15 You can make collection, what you're talking about music. About this, about that. It's not too many different situations you describe.
00:42:25 - Because we mentioned Vladimir Propp a bunch, let me just mention, so there's a sequence of 31
00:42:33 structural notions that are common in stories. And I think-- - They're called units.
00:42:38 - Units, and I think they resonate. It starts, just to give an example, Absention: a member of the hero's community
00:42:46 or family leaves the security of the home environment, then goes through the interdiction,
00:42:51 a forbidding edict or command that's passed upon the hero. Don't go there; don't do this. The hero's warned against some action.
00:42:58 Then step three: Violation of interdiction. You know, break the rules, break out on your own.
00:43:07 Then reconnaissance, the villain makes an effort to attain knowledge needed to fulfill their plot, so on.
00:43:13 It goes on like this. Ends in a wedding, number 31, happily every after. - He just gave description
00:43:21 of all situations. He understands his world-- - Of folk tales. - Yeah, not folk--
00:43:28 - Stories. - Stories, and these stories not just in folk tales. These stories in
00:43:36 detective serials as well. - [Lex] And probably in our lives. We probably live-- - Read this.
00:43:46 They're all, this predicate is good for different situations. For movie, for theater.
00:43:55 - By the way, there's also criticism, right? There's another way to interpret narratives.
00:44:03 From... Claude Levi Strauss. - I am not in this business. - I know, that's theoretical literature,
00:44:14 but it's looking at paradigms behind them. - [Vladimir] It's always, this discussion-- - Philosophers argue.
00:44:20 - Yeah. - But at least there is units. It's not too many units that can describe. But describe probably gives the other units.
00:44:30 Or another way for description. - Exactly, another set of units. - [Vladimir] Another set of predicates, yes.
00:44:36 It doesn't matter how, but they exist probably. - My question is, whether given those units,
00:44:46 whether without our human brains to interpret these units, they would still hold as much power as they have.
00:44:53 Meaning, are those units enough when we give them to the alien species?
00:44:58 - Let me ask you, do you understand digit images? - No, I don't understand. - No, no, no.
00:45:07 When you can recognize these digit images, it means that you understand. - Yes, I understand. - You understand
00:45:15 characters, you understand. - Nope, nope, nope, nope. It's the imitation versus understanding question.
00:45:25 Because I don't understand the mechanism by which I understand-- - No, no. I'm not talking about, I'm
00:45:29 talking about predicates. You understand that it involves symmetry, maybe structure, maybe something else.
00:45:37 I cannot formulate, I just was able to find symmetries, or degree of symmetries. - So this is a good line.
00:45:46 I feel like I understand the basic elements of what makes a good hand recognition system my own.
00:45:54 Like, symmetry connects with me. It seems like that's a very powerful predicate. My question is, is there
00:45:59 a lot more going on that we're not able to introspect? Maybe I need to be able to understand
00:46:09 a huge amount in the world of ideas. Thousands of predicates, millions of predicates in order to do hand recognition.
00:46:20 - [Vladimir] I don't think so. - Both your hope and your intuition are such that very few-- - No, no, let me explain.
00:46:28 You're using digits. You're using examples as well. Theory says that if you will use
00:46:40 all possible functions from Hilbert Space, all possible predicates, you don't need training data. You just will have
00:46:49 admissible set of functions which contain one function. - Yes. So the trade off is, when
00:46:57 you're not using all predicates, you're only using a few good predicates, that you need to have some training data.
00:47:05 - Yes, exactly. - The more good predicates you have, the less training data you need. - Exactly.
00:47:11 That is intelligent learning. - Okay, I'm gonna keep asking the same dumb question, handwritten recognition,
00:47:17 to solve the challenge, you kind of propose a challenge that says we should be able to get state of the art MNIST error rates
00:47:27 by using very few, 60 maybe few examples per digit. What kind of predicates do you think you'll--
00:47:35 - [Vladimir] That is the challenge. (laughs) So people who will solve this problem.
00:47:39 - They will answer. - They will answer it. - Do you think they'll be able to answer it
00:47:44 in a human explainable way? - They just need the right function, that's it. - But so, can that
00:47:50 function be written I guess by an automated reasoning system? Whether we're talking about a neural network
00:48:01 learning a particular function, or another mechanism. - No, I'm not against neural network.
00:48:08 I am against admissible set of function which creates neural network. You did it by hand.
00:48:16 You don't do it by invariants, by predicate, by reason. - But neural networks can then reverse,
00:48:26 to the reverse step of helping you find a function. The task of a neural network is to find disentangled representation, for example is what they call,
00:48:39 is to fine that one predicate function that's really captures some kind of essence. Not the entire essence,
00:48:45 but one very useful essence of this particular visual space. Do you think that's possible?
00:48:55 Listen, I'm grasping, hoping there's an automated way to find good predicates, right? So the question is, what are the mechanisms
00:49:03 of finding good predicates, ideas, that you think we should pursue? A young grad student listening right now.
00:49:11 - I gave example. So find situation where predicate, which you're suggesting,
00:49:23 don't create invariant. It's like in physics, find situation where existing theory cannot explain it.
00:49:36 - [Lex] Find a situation where the existing theory can't explain it. - Cannot explain this.
00:49:40 - [Lex] So you're finding contradictions. - Find contradiction, and then remove this contradiction. But in my case, what means contradiction,
00:49:48 you find function which, if you will use this function, you're not keeping invariants. - [Lex] So really the process
00:49:58 of discovering contradictions. - Yeah. It is like in physics.
00:50:05 Find situation where you have contradiction for one of the property, for one of the predicate,
00:50:15 then include this predicate making invariants. And solve, again, this problem, now you don't have contradiction.
00:50:23 But it is not the best way probably, I don't know, to looking for predicate. - That's just one way.
00:50:32 Okay. - That, no, no. It is brute force way. - The brute force way.
00:50:37 What about the ideas of what, big umbrella term of symbolic AI? In the '80s with Xper Systems,
00:50:48 sort of logic, reasoning-based systems. Is there hope there to find some, through sort of, deductive reasoning,
00:51:00 to find good predicates? - [Vladimir] I don't think so. I think that just logic is not enough.
00:51:12 - Kind of a compelling notion, though. That when smart people sit in a room and reason through things, it seems compelling.
00:51:20 And making our machines do the same is also compelling. - Everything is very simple
00:51:29 when you have infinite number of predicate. You can choose the function you want.
00:51:38 You have invariants and you choose the function you want. But you have to have not too many
00:51:50 invariants to solve the problem. And how from infinite number function to select finite number
00:52:05 and hopefully small finite number of functions. Which is good enough to extract some small set of admissible functions.
00:52:17 So they will be admissible, it's for sure, because every function just decrease set of function and leaving it admissible.
00:52:25 But it will be small. - But why do you think logic-based systems can't help? Intuition, not--
00:52:34 - Because you should know reality, you should know life. This guy like Propp, he knows something
00:52:43 and he tried to put in invariants his understanding. - So but that's the human, yeah, yeah. But see, you're putting too much value
00:52:53 into Vladimir Propp's knowing something. - No, it is-- - Am I being misunderstanding? - What means you know life?
00:53:04 What it mean? - You know common sense. - No, no, you know something. Common sense, it is some rules.
00:53:13 - You think so? Common sense is simply rules? Common sense is every, it's mortality,
00:53:23 it's fear of death, it's love, it's spirituality, it's happiness and sadness.
00:53:30 All of it is tied up into understanding gravity which is what we think of as common sense. - I don't credit or discuss of that.
00:53:39 I want to discuss understand digit recognition. - Any time I bring up love and death you bring it back to digit recognition.
00:53:50 I like it. (laughs) - No, you know, it is doable because there is a challenge. - Yeah. - Which I still have
00:53:57 to solve it; if I will have a student concentrate on this work, I will suggest something or so.
00:54:04 - You mean handwritten recognition? Yeah, it's a beautifully simple, elegant, and yet-- - I think that I know
00:54:11 invariants which will solve this. - You do? - I think that, I think that. But it is not universal.
00:54:21 I want some universal invariants which are good not only for digit recognition, for image understanding.
00:54:30 - So let me ask, how hard do you think is 2-D image understanding? If we can kind of intuit handwritten recognition,
00:54:43 how big of a step, leap, journey is it from that? If I gave you good, if I solved your challenge
00:54:51 for handwritten recognition, how long would my journey then be from that to understanding more general,
00:54:58 natural images? - Immediately. You will understand it as soon as you will make a record.
00:55:05 - You think so? - Because it is not for free. As soon as you will create several invariants
00:55:13 which will help you to get the same performance that the best neural net did
00:55:22 using more than 100 times less examples. You have to have something smart to do that. - And you're saying?
00:55:31 - That's not an invariant. It is predicate because you should put some idea how to do that.
00:55:39 - But okay. Let me just pause, maybe it's a trivial point, maybe not, but handwritten recognition
00:55:44 feels like a 2-D, two-dimensional problem. And it seems, like how much complicated
00:55:54 is the fact that most images are a projection of a three-dimensional world onto a 2-D plane?
00:56:03 It feels like for a three-dimensional world, we need to start understanding common sense
00:56:08 in order to understand an image. It's no longer visual shape and symmetry. It's having to start to understand concepts of,
00:56:20 understand life. - Yeah. You're talking that there are different invariant,
00:56:27 different predicate, yeah. - [Lex] And potentially much larger number. - You know, maybe, but
00:56:32 let's start from simple. - [Lex] But you said that it would be immediate. - No, you know, I cannot
00:56:38 think about things which I don't understand yet. This I understand.
00:56:44 But I'm sure that I don't understand everything there. - [Lex] Yeah, that's the difference-- - It's like they say,
00:56:50 do as simple as possible, but not simpler, and that is exact case. - With handwritten rec-- - With handwritten.
00:56:58 - Yeah, but that's the difference between you and I. (laughs) I welcome and enjoy
00:57:06 thinking about things that I completely don't understand. Because to me it's a natural extension, without having solved handwritten recognition
00:57:15 to wonder how, how difficult is the next step of understanding 2-D and 3-D images, because ultimately,
00:57:27 while the science of intelligence is fascinating, it's also fascinating to see how that maps to the engineering of intelligence.
00:57:34 And recognizing handwritten digits is not, doesn't help you, it might, it may not, help you with the problem of general intelligence.
00:57:46 We don't know; it'll help you a little bit. We don't know how much. - It is unclear.
00:57:49 - It's unclear. - Yeah. - It might very much. - But I would like
00:57:52 to make a remark: I start not from very primitive problem like, challenge problem; I start with very general problem,
00:58:06 with Plato, so you understand. And it comes from Plato, digit recognition. - So you basically took Plato
00:58:17 and the world of forms and ideas, and mapped, and projected it into the clearest, simplest formulation of that big world
00:58:26 into handwritten recognition. - I will say that I did not understand Plato until recently, and until
00:58:36 I considered weak convergence and then predicate and then, oh, this is what Plato thought. - Can you linger on that?
00:58:47 How do you think about this world of ideas and world of things and Plato? - It is a metaphor. - It's a metaphor for sure.
00:58:55 It's a compelling, it's a poetic and a beautiful metaphor. But what can you-- - But it is a way how
00:59:01 you should try to understand how a duck ideas in the world. So from my point of view,
00:59:11 it is very clear, but it is a line all the time people looking for that. Say, Plato then Hegel,
00:59:22 whatever reasonable it exists, whatever exists it is reasonable. I don't know what he have in mind, reasonable.
00:59:30 - [Lex] Right, these philosophers again. - No, no, no, no, no, no, it is, it is next stop of Wilner.
00:59:37 That which we might understand something of reality. He did the same Plato line. And then it comes suddenly to Vladimir Propp.
00:59:48 Look, 31 ideas, 31 units, and describes everything. - There's abstractions, ideas that represent our world,
01:00:00 and we should always try to reach into that. - Yeah, but what you should make a projection
01:00:06 on the reality, but understanding is, it is abstract ideas. You have in your mind several abstract ideas
01:00:15 which you can apply to reality. - And reality in this case so if we look at machine learning is data.
01:00:20 - This example, data. - Data. Okay, let me put this on you,
01:00:26 because I'm an emotional creature. I'm not a mathematical creature like you. I find compelling the idea, forget the space,
01:00:35 this sea of functions. There's also a sea of data in the world. And I find compelling that there might be,
01:00:42 like you said, teacher, small examples of data that are most useful for discovering good,
01:00:49 whether it's predicates or good functions, that the selection of data may be a powerful journey,
01:00:57 a useful mechanism. You know, coming up with a mechanism for selecting good data might be useful, too.
01:01:07 Do you find this idea of finding the right data set interesting at all? Or do you kinda take the data set as a given?
01:01:17 - I think that it is, you know, my thing is very simple. You have huge set of functions.
01:01:26 If you will apply, and you have not too many data. If you pick up function which describes this data,
01:01:37 you will do not very well. - Like randomly pick? - Yeah (mumbles) It will be irritating.
01:01:46 So you should decrease set of function from which you're picking out one. So you should go somehow to admissible set of functions.
01:01:59 And this, what about weak convergence? From another point of view, to make
01:02:11 admissible set of function, you need just the deal, just function which you will take an inner product.
01:02:20 Which you will measure property of your function. That is how it works.
01:02:31 - [Lex] No, I get it, I get it. I understand it but do you, the reality is-- - But let's discuss,
01:02:36 let's think about examples. You have huge set of function and you have several examples. If you just trying to
01:02:48 keep, take function which satisfies these examples, you still will not have it. You need decrease, you need admissible set of functions.
01:02:59 - Absolutely, but what, say you have more data than functions. I mean, maybe not more data than functions,
01:03:09 'cause that's-- - That's impossible. - Impossible, I was trying to be poetic for a second.
01:03:15 I mean, you have a huge amount of data, a huge amount of examples. - But amount of function can be
01:03:22 even bigger. - Even bigger, I understand. - Everything is (chuckles) - [Lex] There's always a bigger boat.
01:03:27 - Whole Hilbert Space of functions. - I got you, but okay. But you don't, you don't find the world of data
01:03:35 to be an interesting optimization space? Like, the optimization should be in the space of functions. - In creating admissible set of functions.
01:03:46 - [Lex] Admissible set of functions. - You know, even from the classical, this is so. From structured reasoning,
01:03:54 you should organize function in the way they will be useful for you. - Right.
01:04:07 - And that is admissible step. - But the way you're thinking about useful is you're given a small set of examples.
01:04:17 - Small set of functions which contain functions by looking for it. - Yeah, but as looking for it based on the empirical set
01:04:26 of small examples. - Yeah. But that is another story, I don't touch it.
01:04:31 Because I believe that these small examples, it's not too small.
01:04:37 Say 65%, law of large numbers works. I don't need uniform law. The story is that in statistics there are two laws.
01:04:46 Law of large numbers and uniform law of large numbers. So I want a situation where I use law of large numbers
01:04:56 but not uniform law of large numbers. - [Lex] Right, so 60 is law of large. It's large enough. - I hope, I hope.
01:05:02 It still needs some evaluation, some balance, et cetera. What I did is the following that,
01:05:11 if you trust that say, this average gives you something close to expectation so you can talk about that,
01:05:24 about this predicate. - Yeah. - [Vladimir] And that is basis of human intelligence.
01:05:30 - Good predicates, the discovery of good predicates is the basis of human intelligence. - No, no, it is discovery
01:05:36 of your understanding of world. Of your total logic of understanding the world. Because you have several functions
01:05:47 which you will apply to reality. - Can you say that again? So you're-- - You have several functions,
01:05:57 predicates, but they're abstract. Then you will apply them to reality, to your data, and you will create in
01:06:04 this weak predicate, which is useful for your task. But predicate are not related specifically
01:06:16 to your task, to this here task. It is abstract functions, which being applied, applied to--
01:06:22 - Many tasks that you might be interested in. - It might be many tasks. I don't know.
01:06:27 Different tasks. - [Lex] Well they should be many tasks. Right? - Yeah, I believe.
01:06:34 Like in Propp case. It was for fairy tales, but it's happened everywhere. - Okay, we talked about
01:06:40 images a little bit but, can we talk about Noam Chomsky for a second? (laughing)
01:06:52 - I don't know him very well. - Personally? - Not personally I don't know. - His ideas.
01:06:58 - Well let me just say, do you think language, human language is essential to expressing ideas,
01:07:05 as Noam Chomsky believes? So like, language is at the core of our formation of predicates.
01:07:14 Human language. - In all the story of language is very complicated. I don't understand this
01:07:20 and I thought about-- - Nobody does. - I'm not ready to work on that because it's so huge.
01:07:30 It is not for me, and I believe not for our century. - The 21st century. - Not for 21st century.
01:07:39 We should learn something, a lot of stuff from simple tasks like digit recognition. - So you think digital recognition,
01:07:49 2-D image, how would you more abstractly define it, digit recognition? It's 2-D image,
01:07:59 symbol recognition essentially? I'm trying to get a sense, sort of thinking about it now, having worked with MNIST forever,
01:08:13 how small of a subset is this of the general vision recognition problem and the general intelligence problem?
01:08:21 Is it? Is it a giant subset, is it not? And how far away is language?
01:08:30 - You know, let me refer to Einstein. Take the simplest problem, as simple as possible, but not simpler, and this is
01:08:37 challenge, is simple problem. But it's simple by idea, but not simple to get it. When you will do this,
01:08:53 you will find some predicate which helps it. - Yeah, with Einstein you can, you look at General Relativity,
01:09:03 but that doesn't help you with quantum mechanics. - And that's another story. You don't have any universal instrument.
01:09:11 - Yeah, so I'm trying to wonder if which space we're in. Whether handwritten recognition is like General Relativity
01:09:21 and then language is like, quantum mechanics, are you still gonna have to do a lot of mess
01:09:26 to universalize it but, I'm trying to see. What's your intuition why handwritten recognition
01:09:39 is easier than language? Just, I think a lot of people would agree with that, but if you could elucidate sort of,
01:09:48 the intuition of why. - I don't know, no, I don't think in this direction.
01:09:56 I just think in the direction that this is problem, which if you will solve it well,
01:10:08 we will create some abstract understanding of images. Maybe not all images.
01:10:19 I would like talk to guys who doing in real images in Columbia University. - What kind of images?
01:10:27 Unreal you said? - Real images. - Real images. - Yeah, what their idea is,
01:10:32 there are predicate what can be predicate. I say symmetry will play a role in real-life images. In any real-life images, 2-D images,
01:10:43 let's talk about 2-D images. Because... that's what we know.
01:10:52 And neural network was created for 2-D images. - So the people I know in vision science, for example,
01:10:58 for people who study human vision, that they usually go to the world of symbols and like, handwritten
01:11:04 recognition but not really. It's other kinds of symbols to study our visual perception system.
01:11:11 As far as I know, not much predicate-type of thinking is understood about our vision system. - [Vladimir] They did not think in this direction.
01:11:19 - They don't, yeah, but how do you even begin to think in that direction?
01:11:24 - That is, I would like to discuss this. Because if you'll be able to show that it is what's working,
01:11:36 and theoretical thing, it's not so bad. - So if we compare it to language, language has like letters, a finite set of letters
01:11:46 and a finite set of ways that you can put together those letters so it feels more amenable to kind of analysis.
01:11:53 With natural images, there is so many pixels-- - No, no, no, letter,
01:12:00 language is much, much more complicated. It involves a lot of different stuff. It's not just understanding of
01:12:12 simple class of tasks. I would like to see list of task where language is involved. - Yes.
01:12:20 So there's a lot of nice benchmarks now in natural language processing, from the very trivial, like, understanding the
01:12:27 elements of a sentence, to question/answering, so much more complicated where you talk about open domain dialogue.
01:12:36 The natural question is, will handwritten recognition, it's really the first step of understanding visual information.
01:12:44 - Right. But even our records show that we're going wrong direction.
01:12:54 Because we need 60,000 digits. - So even this first step, so forget about talking about the full journey.
01:13:01 This first step should be taking in the right direction. - No, no, in wrong direction because 60,000 is unacceptable.
01:13:07 - No, I'm saying it should be taken in the right direction because 60,000 is not acceptable. - You can talk, it's great we have 1/2 percent of error.
01:13:18 - And hopefully the step from doing hand recognition using very few examples, a step towards what
01:13:24 babies do when they crawl and they understand their physical environment. - I don't know what baby do.
01:13:29 - I know you don't know about babies, but-- - If you will do from very small examples, you will find principals
01:13:38 which are different. - That will apply to babies. - From what we're using now. Theoretical it's more or less clear.
01:13:48 That means you will use weak convergence, not just strong convergence. - Do you think these principals are,
01:13:58 will naturally be human interpretable? - [Vladimir] Oh yeah. - So we'll be able to explain them
01:14:04 and have a nice presentation to show what those principals are? Or are they very,
01:14:10 going to be very kind of, abstract kinds of functions? - For example, I talk yesterday about symmetry.
01:14:18 And I gave very simple examples. The same will be like that. - You gave like, a predicate of a basic for--
01:14:24 - For symmetries. - Yes. For different symmetries and you have for--
01:14:29 - For degree of symmetries. That is important, not just symmetry exist and does not exist; degree of symmetry.
01:14:38 - [Lex] Yeah, for handwritten recognition. - It's not for handwritten, it's for any images. But I would like to
01:14:45 apply it to handwritten. - Right, in theory it's more general. Okay, okay.
01:14:55 So a lot of the things we've been talking about falls, we've been talking about philosophy a little bit,
01:15:01 but also about mathematics and statistics. A lot of it falls into this idea, a universal idea of statistical theory of learning.
01:15:11 What is the most beautiful and sort of, powerful or essential idea that you've come across, even for yourself just personally,
01:15:21 in the world of statistics or statistic theory of learning? - Probably uniform convergence which we do with (mumbles).
01:15:32 - [Lex] Can you describe universal convergence? - You have law of large numbers. So for any function, expectation of function,
01:15:44 average of function converged expectation. But if you have a set of functions, for any function it is true.
01:15:53 But it should converge similar to anywhere therefore all set of functions. For learning, you need
01:16:04 uniform convergence; just convergence is not enough. Because when you pick up one which gives minimum,
01:16:17 you can pick up one function which does not converge and it will give you the best answer for this function.
01:16:31 So you need the uniform convergence to guarantee learning. Learning does not really enter your law of large numbers,
01:16:40 really universal. The idea of universal convergence exists in statistics for a long time.
01:16:55 It is interesting that as I think about myself, how stupid I was for 50 years,
01:17:05 I did not see weak convergence. I work only on strong convergence. But now I think that most powerful is weak convergence
01:17:15 because it makes admissible set of functions. And even in old proverbs,
01:17:22 when people tried to understand recognition about duck law, looks like a duck and so on, they used weak convergence.
01:17:32 People in language they understand this. But when we're trying to create artificial intelligence if we want invent in different way.
01:17:46 Just consider strong convergence, artificial intelligence. - So reducing the set of admissible functions
01:17:52 you think there should be effort put into understanding the properties of weak convergence?
01:17:59 - You know, in classical mathematics, in Hilbert Space, there are only two forms of
01:18:07 convergence, strong and weak. Now we can use both. That means that we did everything.
01:18:21 And it so happened, that when we used Hilbert Space, which is very rich space, space of continuous functions
01:18:34 which has an integral and square. So we can apply weak and strong convergence for learning and have closed-form solution.
01:18:45 So for computation it is simple. For me it is sign that it is right way. Because you don't need any this theory.
01:18:56 Yes, do whatever you want. But now the only way left is the concept of what is predicate?
01:19:04 - Of predicate. - But it is not statistics. - By the way, I like the fact that you think
01:19:09 that heuristics are a mess that should be removed from the system, so closed-form solution is the ultimate goal. - No it so happens
01:19:19 that when you're using right instrument, you have closed-form solution. - Do you think intelligence,
01:19:28 human-level intelligence, when we create it will, will have something like a closed-form solution?
01:19:43 - Now I'm looking on bounds, which I gave bounds for convergence. And when I'm looking for bounds,
01:19:54 I'm thinking, what is the most appropriate kernel of this bound would be. So we know that in say,
01:20:06 all our businesses we use radial basis function. But looking for the bound I think that I start to understand that maybe we need
01:20:17 to make corrections to radial basis function, to be closer
01:20:24 to what's better for these bounds. So I'm again trying to understand what type of kernel have best
01:20:36 approximation, not an approximation, best fit to these bounds. - Sure, so there's a lot of interesting work
01:20:45 that could be done in discovering better function than the radial basis functions
01:20:49 for the kinds of bounds you would find. - It still comes from, you're looking to match and trying to understand.
01:21:00 - From your own mind looking at the-- - Yeah but-- - I don't know. - Then I'm trying to understand
01:21:08 what will be good for that. - Yeah, but to me there's still a beauty, again, maybe I'm descending value toward heuristics.
01:21:17 To me, ultimately intelligence will be a mess of heuristics. And that's the engineering answer,
01:21:25 I guess. - Absolutely. When you're doing say, self-driving cars, the great guy who will do this.
01:21:35 It doesn't matter what theory behind that. Who has a better theory have to apply. It is the same story about predicate
01:21:50 because you cannot create rule for, situation is much more than you have rule for that. Maybe you can have more abstract rules,
01:22:05 then it will be less literal. It is the same story about ideas and ideas applied to specific cases.
01:22:16 - But still you should-- - You cannot avoid this. - [Lex] Yes of course, but you should still reach
01:22:20 for the ideas to understand the science. - Yeah, yeah. - Let me kind of ask,
01:22:26 do you think neural networks or functions can be made to reason? What do you think, we've been talking about intelligence,
01:22:37 but this idea of reasoning. There's an element of sequentially disassembling, interpreting the images.
01:22:48 When you think of handwritten recognition, we kind of think that there will be a single, there's an input and an output;
01:22:55 there's not a recurrence. - Yeah. - What do you think about, sort of, the idea of recurrence?
01:23:04 Of going back to memory and thinking through this sort of, sequentially, mangling the different representations over and over
01:23:14 until you arrive at a conclusion? Or is ultimately all of that can be wrapped up in a function? (chuckles)
01:23:24 - You're suggesting, that let us use this type of algorithm. When I started thinking, I first of all,
01:23:33 starting to understand what I want. Can I write down what I want? And then I try to formalize.
01:23:44 And when I do that, I'm thinking how to solve this problem. Till now I did not see situation where-- - Where you need recurrence. - Recurrent.
01:24:04 - But do you observe human beings? - Yeah. - Do you try to, it's the imitation question, right?
01:24:12 It seems that human beings reason, this kind of sequentially, sort of, does that inspire in you a thought
01:24:22 that we need to add that into our intelligence systems? You're saying, okay,
01:24:33 you've kind of answered saying, until now I haven't seen a need for it. And so because of that, you don't see a reason
01:24:40 to think about it? - You know, most of things I don't understand. In reasoning, in humans,
01:24:48 it is for me too complicated. For me, the most difficult part is to ask questions,
01:25:01 good questions. How it works, how people asking questions. I don't know this.
01:25:11 - You said that machine learning's not only about technical things, speaking of questions,
01:25:16 but it's also about philosophy. What role does philosophy play in machine learning? We talked about Plato,
01:25:23 but generally thinking in this philosophical way, how does philosophy and math fit together in your mind?
01:25:37 - Just ideas, and then their implementation. It's like predicate,
01:25:45 say, admissible set of functions. It comes together, everything. Because,
01:25:54 the first declaration of theory was done 50 years ago, all that necessary, so everything there. If you have data you can, and you,
01:26:06 in your set of functions has not big capacity. So law of inter-dimension, you can do that.
01:26:15 You can make structuralist minimization, control capacity. But
01:26:24 there was not table to make admissible set of function with. Now when suddenly we realize that we did not use another idea of convergence, which we can,
01:26:39 everything comes together. - But those are mathematical notions. Philosophy plays a role of simply saying
01:26:48 that we should be swimming in the space of ideas. - Let's talk, what is philosophy? Philosophy means understanding of life.
01:26:59 Understanding of life, say people like Plato, they understand on very high, abstract level of life.
01:27:09 And whatever I'm doing, it's just implementation of my understanding of life. But every new step,
01:27:20 that is very difficult. For example, to find this idea that we need
01:27:31 weak convergence, was not simple for me.
01:27:40 - So that required thinking about life a little bit. Hard to trace, but there was some thought process.
01:27:49 - You know, when I'm thinking about the same problem for 50 years now, and again and again and again,
01:28:00 I'm trying to understand that, this is very important, not to be very enthusiastic. But concentrate on whatever that was not able to achieve.
01:28:09 - Patient. - Yeah. And understand why.
01:28:14 And now I understand that, because I believe in math, I believe that, in this idea.
01:28:23 But now when I see that there are only two ways of convergence, and we're using loss. That means that we must
01:28:32 as well as people do it. But now, exactly in philosophy and what we know about predicate, how we
01:28:44 understand life can be described as a predicate. I thought about that.
01:28:54 And that is more or less obvious level of symmetry. But next, I have a feeling it's something about structures.
01:29:09 But I don't know how to formulate, how to measure and measure a structure and all this stuff. The guy who will
01:29:19 solve this challenge problem, then when they will look at how he did it, probably just only symmetry is not enough.
01:29:31 - [Lex] But something like symmetry will be there. Structures of that kind. - Oh yeah, absolutely.
01:29:36 Symmetry will be there. A level of symmetry will be there. And level of symmetry, anti-symmetry,
01:29:42 diagonal, vertical, I even don't know how you can use in different direction the degree of symmetry; that's very general.
01:29:52 But it will be there. I think that people are very sensitive to the idea of symmetry.
01:29:58 But there are several ideas like symmetry. As I would like to learn. But you cannot learn just thinking about that.
01:30:11 You should do challenging problems and then analyze them. Why it was able to solve them.
01:30:20 And then you will see. Very simple things, it's not easy to find. (Lex laughs) Even talking about this,
01:30:29 every time. - Yes. - I was surprised, I tried to understand,
01:30:36 these people describe in language strong convergence mechanism for learning. I did not see it, I don't know.
01:30:47 But weak convergence, the duck story and story like that when you will explain, you will use weak convergence argument.
01:30:57 It looks like a (mumbles) but when you try to formalize, you're just ignoring this.
01:31:05 Why? Why 50 years? From start of machine learning. - [Lex] And that's the role of philosophy,
01:31:11 thinking about life. - I think that might be. I don't know. Maybe this is theory also,
01:31:21 we should blame for that because empirical risk minimization and now just starting, if you read now textbooks,
01:31:30 they just about bound about empirical risk minimization. They don't look for another problem like admissible set.
01:31:41 - But on the topic of life, perhaps we, you, could talk in Russian for a little bit. What's your favorite
01:31:50 memory from childhood? Okay, I want you to be my (speaks in Russian) - Music.
01:31:59 - How about, can you try and answer in Russian? (speaking in Russian) What kind of musica?
01:32:10 (speaking in Russian) Now that we're talking about Bach, let's switch back to English,
01:33:15 'cause I like Beethoven and Chopin so. - [Vladimir] Chopin is another amusing story. I was--
01:33:20 - But Bach, if we talk about predicates, Bach probably has the most
01:33:28 sort of, well defined predicates that underlie it. - You know, it is very interesting to read what critics writing about Bach,
01:33:38 which words they're using, they're trying to describe predicates. - Yeah. - And then Chopin.
01:33:47 It is very different vocabulary. Very different predicate. And I think that,
01:33:58 if you will make collection of that. So maybe from this you can describe predicate for digit recognition.
01:34:07 - [Lex] From Bach and Chopin. - No, no, no, not from Bach and Chopin. - [Lex] From the the critic interpretation
01:34:14 of the music, yeah. - They're trying to explain you music, what they use this? They describe high-level ideas of Plato's ideas
01:34:26 behind this music. - That's brilliant. Art is not self-explanatory in some sense.
01:34:34 So you have to try to convert it into ideas. - It is insulate problems. When you go from ideas to,
01:34:43 to the representation. It is easy way, but when you're trying to go back, it is you will pose problems but,
01:34:51 nevertheless, I believe when you're looking from that, even from art, you will be able to find predicate for digit recognition.
01:35:03 - That's such a fascinating and powerful notion. Do you ponder your own mortality? Do you think about it? Do you fear it?
01:35:13 Do you draw insight from it? - About mortality? Oh yeah.
01:35:21 - [Lex] Are you afraid of death? - Not too much, not too much. It is pity that I will not be able
01:35:32 to do something which I think I was a feeling to do that. For example, I will be very happy
01:35:44 to work with guys, take tradition from music. To write this collection of description,
01:35:52 how they describe music, how they use a predicate. And from art as well. Then take what's in common,
01:36:03 and try to understand predicate which is absolute for everything. - [Lex] For visual recognition
01:36:10 and see that there is a connection. - Yeah, yeah, exactly. - [Lex] There's still time; we've got time.
01:36:16 (laughing) We've got time. - It takes years and years
01:36:24 and years. - You think so? - It's a long way. - See, you've got the patient mathematician's mind.
01:36:30 I think it could be done very quickly and very beautifully. I think it's a really elegant idea.
01:36:36 Some of many. - Yeah, you know, the most time it is not to make this collection,
01:36:43 to understand what is in common, to think about that once again and again and again. - Again and again and again.
01:36:50 But I think sometimes, especially when you just say this idea now, even just putting together the collection
01:36:58 and looking at the different sets of data. Language, trying to interpret music, criticize music, and images, I think there will be sparks
01:37:10 of ideas that will come. Of course, again and again you'll come up with better ideas but even just that notion
01:37:15 is a beautiful notion. - I even have some example. So I have friend,
01:37:25 who was specialized in Russian poetry. She is professor of Russian poetry.
01:37:35 She did not write poems, but she know a lot of stuff.
01:37:44 She make books, several books and one of them is a collection of Russian poetry.
01:37:54 She has images of Russian poetry. She collected all images of Russian poetry. And I asked her to do following.
01:38:05 You have Nip's digit recognition. And we get 100 digits, less than 100, I don't remember, maybe 50 digits.
01:38:18 And try from practical point of view, describe every image you see, using only words of images of Russian poetry.
01:38:31 And she did it. And then we tried to, I call it learning using privileged information.
01:38:44 I call it privileged information. You have on two languages. One language is just image of digit.
01:38:53 And another language by it a description of this image. And this is privileged information. And there is an algorithm when we are working
01:39:04 with privileged information, you're doing well. Better, much better.
01:39:08 - So there's something there. - Something there. And there is and the thing,
01:39:17 she unfortunately died. The collection of digits and poetic descriptions of those digits.
01:39:29 - [Lex] So there's something there in that poetic description. - I think that
01:39:35 there is an abstract ideas on the Plato level of ideas. - Yeah, that are there, that could be discovered, and music seems
01:39:44 to be a good entry point. - But as soon as we start this, here's this challenge problem.
01:39:50 - The challenge problem-- - It immediately connected to all this stuff. - Especially with your talk and this podcast,
01:39:58 I'll do whatever I can to advertise. Such a clean, beautiful, Einstein-like formulation of the challenge before us.
01:40:03 - Right. - Let me ask another absurd question. We talked about mortality, we talked about philosophy
01:40:14 of life; what do you think is the meaning of life? What's the predicate
01:40:20 for mysterious existence here on Earth? - I don't know. It's very interesting how we have,
01:40:37 in Russia, I don't know if you know the guy Strogatski? They're writing futures they're thinking about,
01:40:47 Hume, what's going on. And they have an idea that there are developing
01:41:00 two type of people: Common people and very smart people. They just started. And these two branches of people will go
01:41:10 in different directions very soon. So that's what they're thinking about next. - (laughs) So the purpose of life
01:41:19 is to create two (chuckles) two paths. - Two paths. - As human societies. Yeah.
01:41:25 - Yes, simple people and more complicated people. - Which do you like best?
01:41:31 The simple people or the complicated ones? - I don't know, Strogatski, he's just, he's fantasy but you know,
01:41:39 every week we have guy who is just writer, and also Soletskoff literature. And he explained how he understands literature
01:41:56 and human relationship. How he sees life. And I understood that I'm just small kid comparing to him.
01:42:09 He is very smart guy in understanding life. He knows this predicate, he knows big blocks of life.
01:42:20 I'm amused every time I listen to him. And he's just talking about literature. And I think that I was surprised.
01:42:33 So the managers in big companies, most of them are
01:42:44 guys who study English language and English literature. So why?
01:42:52 Because they understand life. They understand models. And among them, maybe many talented creatures,
01:43:03 which are just analyzing this. And this is big science like Propp did. This is his blocks.
01:43:13 Yes, very smart. - It amazes me that you are and continue to be humbled by the brilliance of others.
01:43:23 - I'm very modest about myself. I see so smart guys around. - Well let me immodest for you.
01:43:31 You're one of the greatest mathematicians/statisticians of our time, it's truly an honor. Thank you for talking. - No, no, no, okay, okay.
01:43:38 - And let's talk. - (laughs) It is not. - Yeah, let's talk. - I know my limits.
01:43:45 - [Lex] Let's talk again when your challenge is taken on and solved by a grad student.
01:43:51 - Let's talk again. - Especially when-- - [Vladimir] I hope that this happens. - Maybe music will be involved.
01:43:58 Vladimir, thank you so much. It's been an honor. - Thank you very much. - Thanks for listening
01:44:02 to this conversation with Vladimir Vapnik. And thank you to our presenting sponsor Cash App.
01:44:08 Download it, use code: LexPodcast. You'll get $10 and $10 will go to FIRST, an organization that inspires and educates
01:44:16 young mind to become science and technology innovators of tomorrow. If you enjoyed this podcast, subscribe on YouTube,
01:44:23 give it five stars on Apple PodCast, support it on Patreon, or simply connect with me on Twitter @LexFridman.
01:44:30 And now let me leave you with some words from Vladimir Vapnik. "When solving a problem of interest,
